from _typeshed import Incomplete
from astropy.utils.exceptions import AstropyUserWarning as AstropyUserWarning
from collections.abc import Generator

class VerifyError(Exception):
    """
    Verify exception class.
    """
class VerifyWarning(AstropyUserWarning):
    """
    Verify warning class.
    """

VERIFY_OPTIONS: Incomplete

class _Verify:
    """
    Shared methods for verification.
    """
    def run_option(self, option: str = 'warn', err_text: str = '', fix_text: str = 'Fixed.', fix: Incomplete | None = None, fixable: bool = True):
        """
        Execute the verification with selected option.
        """
    def verify(self, option: str = 'warn'):
        '''
        Verify all values in the instance.

        Parameters
        ----------
        option : str
            Output verification option.  Must be one of ``"fix"``,
            ``"silentfix"``, ``"ignore"``, ``"warn"``, or
            ``"exception"``.  May also be any combination of ``"fix"`` or
            ``"silentfix"`` with ``"+ignore"``, ``"+warn"``, or ``"+exception"``
            (e.g. ``"fix+warn"``).  See :ref:`astropy:verify` for more info.
        '''

class _ErrList(list):
    """
    Verification errors list class.  It has a nested list structure
    constructed by error messages generated by verifications at
    different class levels.
    """
    unit: Incomplete
    def __init__(self, val=(), unit: str = 'Element') -> None: ...
    def __str__(self) -> str: ...
    def iter_lines(self, filter: Incomplete | None = None, shift: int = 0) -> Generator[Incomplete, Incomplete]:
        """
        Iterate the nested structure as a list of strings with appropriate
        indentations for each level of structure.
        """
