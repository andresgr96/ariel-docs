from .standard_profile import SAMPSimpleXMLRPCRequestHandler as SAMPSimpleXMLRPCRequestHandler, ThreadingXMLRPCServer as ThreadingXMLRPCServer
from _typeshed import Incomplete
from astropy.utils.data import get_pkg_data_contents as get_pkg_data_contents

__all__: Incomplete
CROSS_DOMAIN: Incomplete
CLIENT_ACCESS_POLICY: Incomplete

class WebProfileRequestHandler(SAMPSimpleXMLRPCRequestHandler):
    """
    Handler of XMLRPC requests performed through the Web Profile.
    """
    def _send_CORS_header(self) -> None: ...
    def end_headers(self) -> None: ...
    def _serve_cross_domain_xml(self): ...
    def do_POST(self): ...
    def do_HEAD(self) -> None: ...
    def do_OPTIONS(self) -> None: ...
    def do_GET(self) -> None: ...
    def is_http_path_valid(self): ...

class WebProfileXMLRPCServer(ThreadingXMLRPCServer):
    """
    XMLRPC server supporting the SAMP Web Profile.
    """
    clients: Incomplete
    def __init__(self, addr, log: Incomplete | None = None, requestHandler=..., logRequests: bool = True, allow_none: bool = True, encoding: Incomplete | None = None) -> None: ...
    def add_client(self, client_id) -> None: ...
    def remove_client(self, client_id) -> None: ...

def web_profile_text_dialog(request, queue) -> None: ...
